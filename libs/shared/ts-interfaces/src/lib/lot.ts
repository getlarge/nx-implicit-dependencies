/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * A lot is a collection of batches that share the same processing target state.
 */
export type Lot = LotPartial & LotExtras;
/**
 * A list of certifications the coffee holds, e.g., 'Organic', 'Fair Trade', or 'Rainforest Alliance'.
 *
 * @minItems 1
 */
export type Certifications = [Certification, ...Certification[]];
/**
 * A schema describing supply chain certification.
 */
export type Certification = Certification1 | string;
export type AggregatedCountriesOfOrigin = Country[];
/**
 * The amount of the measurement, 10 digits in total, maximum of 3 digits after decimal point
 */
export type MeasurementAmount = number;
export type Null = null;
/**
 * The version of the schema.
 */
export type Version = string;
export type AggregatedProcessingMethods = ProcessingMethod[];
export type Null1 = null;
/**
 * The coffee bean variety.
 */
export type Variety = Variety1 | string;
export type Varieties = Variety[];
export type AggregatedVarieties = Varieties[];
/**
 * The batches that make up this lot.
 *
 * @minItems 1
 */
export type Batches = [BatchPartial | CID, ...(BatchPartial | CID)[]];
/**
 * The email address of the contact.
 */
export type Email = string;
export type Website = string;
/**
 * The phone number of the contact.
 */
export type Phone = string;
export type AreaUnit = 'm2';
/**
 * The name of the company|association the contact works for.
 */
export type OrganizationName = string;
/**
 * The amount of the measurement, 10 digits in total, maximum of 3 digits after decimal point
 */
export type MeasurementAmount1 = number;
/**
 * @minItems 1
 */
export type Varieties1 = [Variety2, ...Variety2[]];
/**
 * The coffee bean variety.
 */
export type Variety2 = Variety3 | string;
export type CID = string;

/**
 * A coffee lot is a collection of coffee batches that are processed together. A lot is the smallest unit of coffee that can be sold.
 */
export interface LotPartial {
  /**
   * The lot ID.
   */
  id: string;
  arrivalDate?: string;
  certifications?: Certifications;
  countriesOfOrigin?: AggregatedCountriesOfOrigin;
  expectedWeight?: Weight | Null;
  metadata?: Metadata;
  processingMethods?: AggregatedProcessingMethods;
  sourceWeight?: AggregateWeight | Null1;
  step: ProcessingStep;
  varieties?: AggregatedVarieties;
  createdAt?: string;
  updatedAt?: string;
}
/**
 * This interface was referenced by `AggregateWeight`'s JSON-Schema definition
 * via the `patternProperty` "".
 */
export interface Weight {
  amount: MeasurementAmount;
  unit: WeightUnit;
}
/**
 * A schema storing schema metadata
 */
export interface Metadata {
  /**
   * The date and time when the coffee information was first created.
   */
  created?: string;
  /**
   * The date and time when the coffee information was last updated.
   */
  lastUpdated?: string;
  /**
   * The type of license under which the coffee information is published.
   */
  license?: 'Creative Commons Attribution 4.0 International (CC BY 4.0)';
  /**
   * The naming convention pattern for related resources. It can be used to map resources on a static server.
   */
  resourcePattern?: string;
  /**
   * A reference to the primary source of the coffee information, such as a URL or a citation.
   */
  source?: string;
  state?: MetadataState;
  version: Version;
}
export interface AggregateWeight {
  [k: string]: Weight;
}
export interface LotExtras {
  batches: Batches;
}
/**
 * A batch of coffee is a collection of coffee varieties that are processed together.
 */
export interface BatchPartial {
  /**
   * The batch ID.
   */
  id: string;
  /**
   * The batch name.
   */
  name?: string;
  facility: Contact;
  processing: Processing;
  varieties: Varieties1;
  createdAt?: string;
  updatedAt?: string;
}
export interface Contact {
  /**
   * The full name of the contact.
   */
  name: string;
  firstName?: string;
  lastName?: string;
  email?: Email;
  website?: Website;
  phone?: Phone;
  area?: Area;
  location?: Location;
  organizationName?: OrganizationName;
}
export interface Area {
  amount: MeasurementAmount;
  unit: AreaUnit;
}
export interface Location {
  name?: string;
  country: Country1;
  state?: string;
  /**
   * The specific region within the country.
   */
  region?: string;
  /**
   * The specific subregion within the region.
   */
  subregion?: string;
  zip?: string;
  city?: string;
  street?: string;
  /**
   * The altitude in meters.
   */
  altitude?: number;
  /**
   * The latitude coordinate.
   */
  latitude?: number;
  /**
   * The longitude coordinate.
   */
  longitude?: number;
}
/**
 * The process of coffee beans transformation.
 */
export interface Processing {
  /**
   * The name of the process.
   */
  name?: string;
  sourceState: ProcessingState;
  sourceWeight: Weight1;
  targetState: ProcessingState;
  targetWeight: Weight1;
  /**
   * The start date of the process.
   */
  start: string;
  /**
   * The end date of the process.
   */
  end: string;
  method: ProcessingMethod1;
}
export interface Weight1 {
  amount: MeasurementAmount1;
  unit: WeightUnit1;
}

export enum Certification1 {
  FAIRTRADE = 'Fairtrade',
  FAIR_TRADE_INTERNATIONAL = 'Fair Trade International',
  FAIR_FOR_LIFE = 'Fair for Life',
  RAINFOREST_ALLIANCE = 'Rainforest Alliance',
  ORGANIC = 'Organic',
  BIRD_FRIENDLY = 'Bird Friendly',
  DIRECT_TRADE = 'Direct Trade',
  UTZ_CERTIFIED = 'UTZ Certified'
}
/**
 * The country as ISO code where the coffee is produced.
 */
export enum Country {
  AF = 'AF',
  AX = 'AX',
  AL = 'AL',
  DZ = 'DZ',
  AS = 'AS',
  AD = 'AD',
  AO = 'AO',
  AI = 'AI',
  AQ = 'AQ',
  AG = 'AG',
  AR = 'AR',
  AM = 'AM',
  AW = 'AW',
  AU = 'AU',
  AT = 'AT',
  AZ = 'AZ',
  BS = 'BS',
  BH = 'BH',
  BD = 'BD',
  BB = 'BB',
  BY = 'BY',
  BE = 'BE',
  BZ = 'BZ',
  BJ = 'BJ',
  BM = 'BM',
  BT = 'BT',
  BO = 'BO',
  BQ = 'BQ',
  BA = 'BA',
  BW = 'BW',
  BV = 'BV',
  BR = 'BR',
  IO = 'IO',
  BN = 'BN',
  BG = 'BG',
  BF = 'BF',
  BI = 'BI',
  CV = 'CV',
  KH = 'KH',
  CM = 'CM',
  CA = 'CA',
  KY = 'KY',
  CF = 'CF',
  TD = 'TD',
  CL = 'CL',
  CN = 'CN',
  CX = 'CX',
  CC = 'CC',
  CO = 'CO',
  KM = 'KM',
  CG = 'CG',
  CD = 'CD',
  CK = 'CK',
  CR = 'CR',
  CI = 'CI',
  HR = 'HR',
  CU = 'CU',
  CW = 'CW',
  CY = 'CY',
  CZ = 'CZ',
  DK = 'DK',
  DJ = 'DJ',
  DM = 'DM',
  DO = 'DO',
  EC = 'EC',
  EG = 'EG',
  SV = 'SV',
  GQ = 'GQ',
  ER = 'ER',
  EE = 'EE',
  SZ = 'SZ',
  ET = 'ET',
  FK = 'FK',
  FO = 'FO',
  FJ = 'FJ',
  FI = 'FI',
  FR = 'FR',
  GF = 'GF',
  PF = 'PF',
  TF = 'TF',
  GA = 'GA',
  GM = 'GM',
  GE = 'GE',
  DE = 'DE',
  GH = 'GH',
  GI = 'GI',
  GR = 'GR',
  GL = 'GL',
  GD = 'GD',
  GP = 'GP',
  GU = 'GU',
  GT = 'GT',
  GG = 'GG',
  GN = 'GN',
  GW = 'GW',
  GY = 'GY',
  HT = 'HT',
  HM = 'HM',
  VA = 'VA',
  HN = 'HN',
  HK = 'HK',
  HU = 'HU',
  IS = 'IS',
  IN = 'IN',
  ID = 'ID',
  IR = 'IR',
  IQ = 'IQ',
  IE = 'IE',
  IM = 'IM',
  IL = 'IL',
  IT = 'IT',
  JM = 'JM',
  JP = 'JP',
  JE = 'JE',
  JO = 'JO',
  KZ = 'KZ',
  KE = 'KE',
  KI = 'KI',
  KP = 'KP',
  KR = 'KR',
  KW = 'KW',
  KG = 'KG',
  LA = 'LA'
}
export enum WeightUnit {
  G = 'g',
  KG = 'kg',
  OZ = 'oz',
  LB = 'lb'
}
/**
 * The state of the coffee information.
 */
export enum MetadataState {
  DRAFT = 'draft',
  PUBLISHED = 'published',
  ARCHIVED = 'archived'
}
/**
 * The method used to process the coffee, e.g., washed, natural, or honey.
 */
export enum ProcessingMethod {
  NATURAL = 'natural',
  FULLY_WASHED = 'fully_washed',
  SEMI_WASHED = 'semi_washed',
  PULPED_NATURAL = 'pulped_natural',
  HONEY = 'honey',
  CARBONIC_MACERATION = 'carbonic_maceration',
  WET_HULLED = 'wet_hulled',
  OTHER = 'other'
}
/**
 * The coffee transformation's chain step.
 */
export enum ProcessingStep {
  HARVEST = 'harvest',
  DRY_CHERRY = 'dry_cherry',
  PARCHMENT = 'parchment',
  RAW_GREEN = 'raw_green',
  GREEN = 'green',
  ROASTING = 'roasting',
  BLENDING = 'blending'
}
export enum Variety1 {
  AGARO = 'Agaro',
  ARUSHA = 'Arusha',
  ATENG = 'Ateng',
  BATIAN = 'Batian',
  BERGANDAL = 'Bergandal',
  BLUE_MOUNTAIN = 'Blue Mountain',
  BOURBON = 'Bourbon',
  CASTILLO = 'Castillo',
  CATIMOR = 'Catimor',
  CATUAI = 'Catuai',
  CATURRA = 'Caturra',
  CAUVERY = 'Cauvery',
  EXCELSA = 'Excelsa',
  GEISHA = 'Geisha',
  ICATU = 'Icatu',
  JACKSON = 'Jackson',
  KENT = 'Kent',
  K7 = 'K7',
  LAURINA = 'Laurina',
  LIBERICA = 'Liberica',
  MARAGOGYPE = 'Maragogype',
  MIBRIZI = 'Mibrizi',
  MOKA = 'Moka',
  MUNDO_NOVO = 'Mundo Novo',
  MYSORE = 'Mysore',
  N5 = 'N5',
  N39 = 'N39',
  ONAN_GANJANG = 'Onan Ganjang',
  PACAMARA = 'Pacamara',
  RED_BOURBON = 'Red Bourbon',
  RUIRU_11 = 'Ruiru 11',
  S274 = 'S274',
  S795 = 'S795',
  SELECTION_5B = 'Selection 5B',
  SELECTION_6 = 'Selection 6',
  SELECTION_9 = 'Selection 9',
  SELECTION_10 = 'Selection 10',
  SIDIKALANG = 'Sidikalang',
  SL14 = 'SL14',
  SL28 = 'SL28',
  SL34 = 'SL34',
  SV_2006 = 'SV-2006',
  SUDAN_RUME = 'Sudan Rume',
  TIMTIM = 'TimTim',
  TYPICA = 'Typica',
  TYPICA_NYARA = 'Typica/Nyara',
  YELLOW_BOURBON = 'Yellow Bourbon'
}
/**
 * The country as ISO code where the coffee is produced.
 */
export enum Country1 {
  AF = 'AF',
  AX = 'AX',
  AL = 'AL',
  DZ = 'DZ',
  AS = 'AS',
  AD = 'AD',
  AO = 'AO',
  AI = 'AI',
  AQ = 'AQ',
  AG = 'AG',
  AR = 'AR',
  AM = 'AM',
  AW = 'AW',
  AU = 'AU',
  AT = 'AT',
  AZ = 'AZ',
  BS = 'BS',
  BH = 'BH',
  BD = 'BD',
  BB = 'BB',
  BY = 'BY',
  BE = 'BE',
  BZ = 'BZ',
  BJ = 'BJ',
  BM = 'BM',
  BT = 'BT',
  BO = 'BO',
  BQ = 'BQ',
  BA = 'BA',
  BW = 'BW',
  BV = 'BV',
  BR = 'BR',
  IO = 'IO',
  BN = 'BN',
  BG = 'BG',
  BF = 'BF',
  BI = 'BI',
  CV = 'CV',
  KH = 'KH',
  CM = 'CM',
  CA = 'CA',
  KY = 'KY',
  CF = 'CF',
  TD = 'TD',
  CL = 'CL',
  CN = 'CN',
  CX = 'CX',
  CC = 'CC',
  CO = 'CO',
  KM = 'KM',
  CG = 'CG',
  CD = 'CD',
  CK = 'CK',
  CR = 'CR',
  CI = 'CI',
  HR = 'HR',
  CU = 'CU',
  CW = 'CW',
  CY = 'CY',
  CZ = 'CZ',
  DK = 'DK',
  DJ = 'DJ',
  DM = 'DM',
  DO = 'DO',
  EC = 'EC',
  EG = 'EG',
  SV = 'SV',
  GQ = 'GQ',
  ER = 'ER',
  EE = 'EE',
  SZ = 'SZ',
  ET = 'ET',
  FK = 'FK',
  FO = 'FO',
  FJ = 'FJ',
  FI = 'FI',
  FR = 'FR',
  GF = 'GF',
  PF = 'PF',
  TF = 'TF',
  GA = 'GA',
  GM = 'GM',
  GE = 'GE',
  DE = 'DE',
  GH = 'GH',
  GI = 'GI',
  GR = 'GR',
  GL = 'GL',
  GD = 'GD',
  GP = 'GP',
  GU = 'GU',
  GT = 'GT',
  GG = 'GG',
  GN = 'GN',
  GW = 'GW',
  GY = 'GY',
  HT = 'HT',
  HM = 'HM',
  VA = 'VA',
  HN = 'HN',
  HK = 'HK',
  HU = 'HU',
  IS = 'IS',
  IN = 'IN',
  ID = 'ID',
  IR = 'IR',
  IQ = 'IQ',
  IE = 'IE',
  IM = 'IM',
  IL = 'IL',
  IT = 'IT',
  JM = 'JM',
  JP = 'JP',
  JE = 'JE',
  JO = 'JO',
  KZ = 'KZ',
  KE = 'KE',
  KI = 'KI',
  KP = 'KP',
  KR = 'KR',
  KW = 'KW',
  KG = 'KG',
  LA = 'LA'
}
/**
 * The coffee state from harvested cherries to green beans.
 */
export enum ProcessingState {
  RAW_CHERRIES = 'raw_cherries',
  DRIED_CHERRIES = 'dried_cherries',
  WET_PARCHMENT = 'wet_parchment',
  PARCHMENT = 'parchment',
  WET_GREEN = 'wet_green',
  RAW_GREEN = 'raw_green',
  GREEN = 'green'
}
export enum WeightUnit1 {
  G = 'g',
  KG = 'kg',
  OZ = 'oz',
  LB = 'lb'
}
/**
 * The method used to process the coffee, e.g., washed, natural, or honey.
 */
export enum ProcessingMethod1 {
  NATURAL = 'natural',
  FULLY_WASHED = 'fully_washed',
  SEMI_WASHED = 'semi_washed',
  PULPED_NATURAL = 'pulped_natural',
  HONEY = 'honey',
  CARBONIC_MACERATION = 'carbonic_maceration',
  WET_HULLED = 'wet_hulled',
  OTHER = 'other'
}
export enum Variety3 {
  AGARO = 'Agaro',
  ARUSHA = 'Arusha',
  ATENG = 'Ateng',
  BATIAN = 'Batian',
  BERGANDAL = 'Bergandal',
  BLUE_MOUNTAIN = 'Blue Mountain',
  BOURBON = 'Bourbon',
  CASTILLO = 'Castillo',
  CATIMOR = 'Catimor',
  CATUAI = 'Catuai',
  CATURRA = 'Caturra',
  CAUVERY = 'Cauvery',
  EXCELSA = 'Excelsa',
  GEISHA = 'Geisha',
  ICATU = 'Icatu',
  JACKSON = 'Jackson',
  KENT = 'Kent',
  K7 = 'K7',
  LAURINA = 'Laurina',
  LIBERICA = 'Liberica',
  MARAGOGYPE = 'Maragogype',
  MIBRIZI = 'Mibrizi',
  MOKA = 'Moka',
  MUNDO_NOVO = 'Mundo Novo',
  MYSORE = 'Mysore',
  N5 = 'N5',
  N39 = 'N39',
  ONAN_GANJANG = 'Onan Ganjang',
  PACAMARA = 'Pacamara',
  RED_BOURBON = 'Red Bourbon',
  RUIRU_11 = 'Ruiru 11',
  S274 = 'S274',
  S795 = 'S795',
  SELECTION_5B = 'Selection 5B',
  SELECTION_6 = 'Selection 6',
  SELECTION_9 = 'Selection 9',
  SELECTION_10 = 'Selection 10',
  SIDIKALANG = 'Sidikalang',
  SL14 = 'SL14',
  SL28 = 'SL28',
  SL34 = 'SL34',
  SV_2006 = 'SV-2006',
  SUDAN_RUME = 'Sudan Rume',
  TIMTIM = 'TimTim',
  TYPICA = 'Typica',
  TYPICA_NYARA = 'Typica/Nyara',
  YELLOW_BOURBON = 'Yellow Bourbon'
}
