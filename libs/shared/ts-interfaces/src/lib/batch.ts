/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * A batch is a collection of receptions that have been processed together.
 */
export type Batch = BatchPartial & BatchExtras;
/**
 * The email address of the contact.
 */
export type Email = string;
export type Website = string;
/**
 * The phone number of the contact.
 */
export type Phone = string;
/**
 * The amount of the measurement, 10 digits in total, maximum of 3 digits after decimal point
 */
export type MeasurementAmount = number;
export type AreaUnit = 'm2';
/**
 * The name of the company|association the contact works for.
 */
export type OrganizationName = string;
/**
 * The amount of the measurement, 10 digits in total, maximum of 3 digits after decimal point
 */
export type MeasurementAmount1 = number;
/**
 * @minItems 1
 */
export type Varieties = [Variety, ...Variety[]];
/**
 * The coffee bean variety.
 */
export type Variety = Variety1 | string;
/**
 * The reception items from which the batch originate.
 *
 * @minItems 1
 * @maxItems 1
 */
export type Receptions = [ReceptionPartial | CID];
/**
 * The items that were received.
 *
 * @minItems 1
 */
export type ReceptionItems = [ReceptionItem, ...ReceptionItem[]];
/**
 * The range of temperatures in the coffee-growing area, e.g., '15-25 °C' or '20-30 °C'.
 */
export type Temperature = MeasurementRange & TemperatureUnit;
/**
 * The amount of the measurement, 10 digits in total, maximum of 3 digits after decimal point
 */
export type MeasurementAmount2 = number;
/**
 * The average rainfall in the coffee-growing area, e.g., '1000-1500 mm' or '1500-2000 mm'.
 */
export type Rainfall = MeasurementRange & RainfallUnit;
/**
 * The type of soil in the coffee-growing area, which can influence the flavor profile of the coffee.
 */
export type SoilType = string;
export type Origin = Contact1 & OriginDetails;
/**
 * The email address of the contact.
 */
export type Email1 = string;
export type Website1 = string;
/**
 * The phone number of the contact.
 */
export type Phone1 = string;
export type AreaUnit1 = 'm2';
/**
 * The name of the company|association the contact works for.
 */
export type OrganizationName1 = string;
/**
 * A price relative to a base unit.
 */
export type RelativePrice = Price & {
  unit: WeightUnit;
};
/**
 * The version of the schema.
 */
export type Version = string;
export type CID = string;

/**
 * A batch of coffee is a collection of coffee varieties that are processed together.
 */
export interface BatchPartial {
  /**
   * The batch ID.
   */
  id: string;
  /**
   * The batch name.
   */
  name?: string;
  facility: Contact;
  processing: Processing;
  varieties: Varieties;
  createdAt?: string;
  updatedAt?: string;
}
export interface Contact {
  /**
   * The full name of the contact.
   */
  name: string;
  firstName?: string;
  lastName?: string;
  email?: Email;
  website?: Website;
  phone?: Phone;
  area?: Area;
  location?: Location;
  organizationName?: OrganizationName;
}
export interface Area {
  amount: MeasurementAmount;
  unit: AreaUnit;
}
export interface Location {
  name?: string;
  country: Country;
  state?: string;
  /**
   * The specific region within the country.
   */
  region?: string;
  /**
   * The specific subregion within the region.
   */
  subregion?: string;
  zip?: string;
  city?: string;
  street?: string;
  /**
   * The altitude in meters.
   */
  altitude?: number;
  /**
   * The latitude coordinate.
   */
  latitude?: number;
  /**
   * The longitude coordinate.
   */
  longitude?: number;
}
/**
 * The process of coffee beans transformation.
 */
export interface Processing {
  /**
   * The name of the process.
   */
  name?: string;
  sourceState: ProcessingState;
  sourceWeight: Weight;
  targetState: ProcessingState;
  targetWeight: Weight;
  /**
   * The start date of the process.
   */
  start: string;
  /**
   * The end date of the process.
   */
  end: string;
  method: ProcessingMethod;
}
export interface Weight {
  amount: MeasurementAmount1;
  unit: WeightUnit;
}
export interface BatchExtras {
  receptions: Receptions;
}
/**
 * A reception is the step before processing. It describes when and where the coffee is received. The weights and prices of the reception items are aggregated at the reception. The aggregate weight of a reception is divided among one or more batches. Each batch must be linked to the original source of the coffee in order to preserve traceability throughout the supply chain.
 */
export interface ReceptionPartial {
  /**
   * The batch ID.
   */
  id: string;
  facility?: Contact;
  items: ReceptionItems;
  metadata?: Metadata;
  /**
   * The date the coffee was received.
   */
  receptionDate: string;
  state: ProcessingState1;
}
export interface ReceptionItem {
  grossWeight?: Weight;
  growingConditions?: GrowingConditions;
  harvesting?: Harvesting;
  origin: Origin;
  part?: BatchPart;
  price?: RelativePrice;
  weight: Weight;
}
/**
 * Information about the coffee growing conditions.
 */
export interface GrowingConditions {
  climate?: Climate;
  soilType?: SoilType;
  elevation?: Elevation;
}
/**
 * A description of the climate of the coffee-growing area, such as temperature range, rainfall patterns, and humidity.
 */
export interface Climate {
  temperature?: Temperature;
  rainfall?: Rainfall;
  humidity?: Humidity;
}
export interface MeasurementRange {
  min: MeasurementAmount2;
  max: MeasurementAmount2;
}
export interface TemperatureUnit {
  unit: '°C';
}
export interface RainfallUnit {
  unit: 'mm';
}
/**
 * The average humidity in the coffee-growing area, e.g., '70-80%' or '80-90%'.
 */
export interface Humidity {
  min: number;
  max: number;
  unit: '%';
  additionalProperties?: never;
}
/**
 * The elevation (in meters) at which the coffee is grown.
 */
export interface Elevation {
  amount: MeasurementAmount1;
  unit: 'm';
}
/**
 * Information about the coffee harvesting process.
 */
export interface Harvesting {
  time: HarvestingTime;
  method: HarvestingMethod;
  /**
   * A description of the labor practices used in the harvest, such as the use of local workers or migrant labor, if some or all of the labor is mechanized, and if the labor is paid or unpaid or if team are incentivized for uniform ripeness.
   */
  labor?: string;
}
/**
 * The time of year when the coffee was harvested, e.g., 'March-April' or 'October-November'.
 */
export interface HarvestingTime {
  start?: Month;
  end?: Month;
}
export interface Contact1 {
  /**
   * The full name of the contact.
   */
  name: string;
  firstName?: string;
  lastName?: string;
  email?: Email1;
  website?: Website1;
  phone?: Phone1;
  area?: Area1;
  location?: Location1;
  organizationName?: OrganizationName1;
}
export interface Area1 {
  amount: MeasurementAmount2;
  unit: AreaUnit1;
}
export interface Location1 {
  name?: string;
  country: Country1;
  state?: string;
  /**
   * The specific region within the country.
   */
  region?: string;
  /**
   * The specific subregion within the region.
   */
  subregion?: string;
  zip?: string;
  city?: string;
  street?: string;
  /**
   * The altitude in meters.
   */
  altitude?: number;
  /**
   * The latitude coordinate.
   */
  latitude?: number;
  /**
   * The longitude coordinate.
   */
  longitude?: number;
}
export interface OriginDetails {
  role: OriginRole;
}
export interface Price {
  /**
   * The price amount
   */
  amount: number;
  currency: Currency;
}
/**
 * A schema storing schema metadata
 */
export interface Metadata {
  /**
   * The date and time when the coffee information was first created.
   */
  created?: string;
  /**
   * The date and time when the coffee information was last updated.
   */
  lastUpdated?: string;
  /**
   * The type of license under which the coffee information is published.
   */
  license?: 'Creative Commons Attribution 4.0 International (CC BY 4.0)';
  /**
   * The naming convention pattern for related resources. It can be used to map resources on a static server.
   */
  resourcePattern?: string;
  /**
   * A reference to the primary source of the coffee information, such as a URL or a citation.
   */
  source?: string;
  state?: MetadataState;
  version: Version;
}

/**
 * The country as ISO code where the coffee is produced.
 */
export enum Country {
  AF = 'AF',
  AX = 'AX',
  AL = 'AL',
  DZ = 'DZ',
  AS = 'AS',
  AD = 'AD',
  AO = 'AO',
  AI = 'AI',
  AQ = 'AQ',
  AG = 'AG',
  AR = 'AR',
  AM = 'AM',
  AW = 'AW',
  AU = 'AU',
  AT = 'AT',
  AZ = 'AZ',
  BS = 'BS',
  BH = 'BH',
  BD = 'BD',
  BB = 'BB',
  BY = 'BY',
  BE = 'BE',
  BZ = 'BZ',
  BJ = 'BJ',
  BM = 'BM',
  BT = 'BT',
  BO = 'BO',
  BQ = 'BQ',
  BA = 'BA',
  BW = 'BW',
  BV = 'BV',
  BR = 'BR',
  IO = 'IO',
  BN = 'BN',
  BG = 'BG',
  BF = 'BF',
  BI = 'BI',
  CV = 'CV',
  KH = 'KH',
  CM = 'CM',
  CA = 'CA',
  KY = 'KY',
  CF = 'CF',
  TD = 'TD',
  CL = 'CL',
  CN = 'CN',
  CX = 'CX',
  CC = 'CC',
  CO = 'CO',
  KM = 'KM',
  CG = 'CG',
  CD = 'CD',
  CK = 'CK',
  CR = 'CR',
  CI = 'CI',
  HR = 'HR',
  CU = 'CU',
  CW = 'CW',
  CY = 'CY',
  CZ = 'CZ',
  DK = 'DK',
  DJ = 'DJ',
  DM = 'DM',
  DO = 'DO',
  EC = 'EC',
  EG = 'EG',
  SV = 'SV',
  GQ = 'GQ',
  ER = 'ER',
  EE = 'EE',
  SZ = 'SZ',
  ET = 'ET',
  FK = 'FK',
  FO = 'FO',
  FJ = 'FJ',
  FI = 'FI',
  FR = 'FR',
  GF = 'GF',
  PF = 'PF',
  TF = 'TF',
  GA = 'GA',
  GM = 'GM',
  GE = 'GE',
  DE = 'DE',
  GH = 'GH',
  GI = 'GI',
  GR = 'GR',
  GL = 'GL',
  GD = 'GD',
  GP = 'GP',
  GU = 'GU',
  GT = 'GT',
  GG = 'GG',
  GN = 'GN',
  GW = 'GW',
  GY = 'GY',
  HT = 'HT',
  HM = 'HM',
  VA = 'VA',
  HN = 'HN',
  HK = 'HK',
  HU = 'HU',
  IS = 'IS',
  IN = 'IN',
  ID = 'ID',
  IR = 'IR',
  IQ = 'IQ',
  IE = 'IE',
  IM = 'IM',
  IL = 'IL',
  IT = 'IT',
  JM = 'JM',
  JP = 'JP',
  JE = 'JE',
  JO = 'JO',
  KZ = 'KZ',
  KE = 'KE',
  KI = 'KI',
  KP = 'KP',
  KR = 'KR',
  KW = 'KW',
  KG = 'KG',
  LA = 'LA'
}
/**
 * The coffee state from harvested cherries to green beans.
 */
export enum ProcessingState {
  RAW_CHERRIES = 'raw_cherries',
  DRIED_CHERRIES = 'dried_cherries',
  WET_PARCHMENT = 'wet_parchment',
  PARCHMENT = 'parchment',
  WET_GREEN = 'wet_green',
  RAW_GREEN = 'raw_green',
  GREEN = 'green'
}
export enum WeightUnit {
  G = 'g',
  KG = 'kg',
  OZ = 'oz',
  LB = 'lb'
}
/**
 * The method used to process the coffee, e.g., washed, natural, or honey.
 */
export enum ProcessingMethod {
  NATURAL = 'natural',
  FULLY_WASHED = 'fully_washed',
  SEMI_WASHED = 'semi_washed',
  PULPED_NATURAL = 'pulped_natural',
  HONEY = 'honey',
  CARBONIC_MACERATION = 'carbonic_maceration',
  WET_HULLED = 'wet_hulled',
  OTHER = 'other'
}
export enum Variety1 {
  AGARO = 'Agaro',
  ARUSHA = 'Arusha',
  ATENG = 'Ateng',
  BATIAN = 'Batian',
  BERGANDAL = 'Bergandal',
  BLUE_MOUNTAIN = 'Blue Mountain',
  BOURBON = 'Bourbon',
  CASTILLO = 'Castillo',
  CATIMOR = 'Catimor',
  CATUAI = 'Catuai',
  CATURRA = 'Caturra',
  CAUVERY = 'Cauvery',
  EXCELSA = 'Excelsa',
  GEISHA = 'Geisha',
  ICATU = 'Icatu',
  JACKSON = 'Jackson',
  KENT = 'Kent',
  K7 = 'K7',
  LAURINA = 'Laurina',
  LIBERICA = 'Liberica',
  MARAGOGYPE = 'Maragogype',
  MIBRIZI = 'Mibrizi',
  MOKA = 'Moka',
  MUNDO_NOVO = 'Mundo Novo',
  MYSORE = 'Mysore',
  N5 = 'N5',
  N39 = 'N39',
  ONAN_GANJANG = 'Onan Ganjang',
  PACAMARA = 'Pacamara',
  RED_BOURBON = 'Red Bourbon',
  RUIRU_11 = 'Ruiru 11',
  S274 = 'S274',
  S795 = 'S795',
  SELECTION_5B = 'Selection 5B',
  SELECTION_6 = 'Selection 6',
  SELECTION_9 = 'Selection 9',
  SELECTION_10 = 'Selection 10',
  SIDIKALANG = 'Sidikalang',
  SL14 = 'SL14',
  SL28 = 'SL28',
  SL34 = 'SL34',
  SV_2006 = 'SV-2006',
  SUDAN_RUME = 'Sudan Rume',
  TIMTIM = 'TimTim',
  TYPICA = 'Typica',
  TYPICA_NYARA = 'Typica/Nyara',
  YELLOW_BOURBON = 'Yellow Bourbon'
}
/**
 * A month of the year, e.g., 'January' or 'February'.
 */
export enum Month {
  JANUARY = 'January',
  FEBRUARY = 'February',
  MARCH = 'March',
  APRIL = 'April',
  MAY = 'May',
  JUNE = 'June',
  JULY = 'July',
  AUGUST = 'August',
  SEPTEMBER = 'September',
  OCTOBER = 'October',
  NOVEMBER = 'November',
  DECEMBER = 'December'
}
/**
 * The method used for harvesting the coffee cherries, e.g., 'hand-picking' or 'mechanical'.
 */
export enum HarvestingMethod {
  HAND_PICKING = 'hand-picking',
  MECHANICAL = 'mechanical',
  STRIP_PICKING = 'strip-picking',
  OTHER = 'other'
}
/**
 * The country as ISO code where the coffee is produced.
 */
export enum Country1 {
  AF = 'AF',
  AX = 'AX',
  AL = 'AL',
  DZ = 'DZ',
  AS = 'AS',
  AD = 'AD',
  AO = 'AO',
  AI = 'AI',
  AQ = 'AQ',
  AG = 'AG',
  AR = 'AR',
  AM = 'AM',
  AW = 'AW',
  AU = 'AU',
  AT = 'AT',
  AZ = 'AZ',
  BS = 'BS',
  BH = 'BH',
  BD = 'BD',
  BB = 'BB',
  BY = 'BY',
  BE = 'BE',
  BZ = 'BZ',
  BJ = 'BJ',
  BM = 'BM',
  BT = 'BT',
  BO = 'BO',
  BQ = 'BQ',
  BA = 'BA',
  BW = 'BW',
  BV = 'BV',
  BR = 'BR',
  IO = 'IO',
  BN = 'BN',
  BG = 'BG',
  BF = 'BF',
  BI = 'BI',
  CV = 'CV',
  KH = 'KH',
  CM = 'CM',
  CA = 'CA',
  KY = 'KY',
  CF = 'CF',
  TD = 'TD',
  CL = 'CL',
  CN = 'CN',
  CX = 'CX',
  CC = 'CC',
  CO = 'CO',
  KM = 'KM',
  CG = 'CG',
  CD = 'CD',
  CK = 'CK',
  CR = 'CR',
  CI = 'CI',
  HR = 'HR',
  CU = 'CU',
  CW = 'CW',
  CY = 'CY',
  CZ = 'CZ',
  DK = 'DK',
  DJ = 'DJ',
  DM = 'DM',
  DO = 'DO',
  EC = 'EC',
  EG = 'EG',
  SV = 'SV',
  GQ = 'GQ',
  ER = 'ER',
  EE = 'EE',
  SZ = 'SZ',
  ET = 'ET',
  FK = 'FK',
  FO = 'FO',
  FJ = 'FJ',
  FI = 'FI',
  FR = 'FR',
  GF = 'GF',
  PF = 'PF',
  TF = 'TF',
  GA = 'GA',
  GM = 'GM',
  GE = 'GE',
  DE = 'DE',
  GH = 'GH',
  GI = 'GI',
  GR = 'GR',
  GL = 'GL',
  GD = 'GD',
  GP = 'GP',
  GU = 'GU',
  GT = 'GT',
  GG = 'GG',
  GN = 'GN',
  GW = 'GW',
  GY = 'GY',
  HT = 'HT',
  HM = 'HM',
  VA = 'VA',
  HN = 'HN',
  HK = 'HK',
  HU = 'HU',
  IS = 'IS',
  IN = 'IN',
  ID = 'ID',
  IR = 'IR',
  IQ = 'IQ',
  IE = 'IE',
  IM = 'IM',
  IL = 'IL',
  IT = 'IT',
  JM = 'JM',
  JP = 'JP',
  JE = 'JE',
  JO = 'JO',
  KZ = 'KZ',
  KE = 'KE',
  KI = 'KI',
  KP = 'KP',
  KR = 'KR',
  KW = 'KW',
  KG = 'KG',
  LA = 'LA'
}
export enum OriginRole {
  FARM = 'farm',
  FIELD = 'field',
  COMMUNITY = 'community',
  COOPERATIVE = 'cooperative',
  PICKER = 'picker',
  OTHER = 'other'
}
export enum BatchPart {
  RIPE = 'ripe',
  OVER_RIPE = 'over ripe',
  UNRIPE = 'unripe',
  DRY_POD = 'dry pod',
  EXPORT = 'export',
  LOCAL = 'local',
  PRIMARY = 'primary',
  SECONDARY = 'secondary',
  TERTIARY = 'tertiary',
  FLOATER = 'floater',
  INFERIOR = 'inferior',
  SUPERIOR = 'superior',
  DISCARD = 'discard',
  CASCARA = 'cascara',
  OTHER = 'other',
  A = 'a',
  B = 'b',
  ONE = 'one',
  TWO = 'two',
  THREE = 'three',
  FOUR = 'four',
  FIVE = 'five',
  SIX = 'six',
  SEVEN = 'seven',
  EIGHT = 'eight',
  NINE = 'nine'
}
/**
 * The price unit
 */
export enum Currency {
  AED = 'AED',
  AMD = 'AMD',
  ARS = 'ARS',
  AUD = 'AUD',
  AZN = 'AZN',
  BAM = 'BAM',
  BDT = 'BDT',
  BGN = 'BGN',
  BOB = 'BOB',
  BRL = 'BRL',
  BWP = 'BWP',
  BYN = 'BYN',
  CAD = 'CAD',
  CHF = 'CHF',
  CLP = 'CLP',
  CNY = 'CNY',
  COP = 'COP',
  CRC = 'CRC',
  CUC = 'CUC',
  CUP = 'CUP',
  CZK = 'CZK',
  DKK = 'DKK',
  DOP = 'DOP',
  DZD = 'DZD',
  EGP = 'EGP',
  EUR = 'EUR',
  GBP = 'GBP',
  GEL = 'GEL',
  GTQ = 'GTQ',
  HKD = 'HKD',
  HNL = 'HNL',
  HRK = 'HRK',
  HUF = 'HUF',
  IDR = 'IDR',
  ILS = 'ILS',
  INR = 'INR',
  ISK = 'ISK',
  JOD = 'JOD',
  JPY = 'JPY',
  KES = 'KES',
  KGS = 'KGS',
  KHR = 'KHR',
  KRW = 'KRW',
  KWD = 'KWD',
  KZT = 'KZT',
  LBP = 'LBP',
  LKR = 'LKR',
  LYD = 'LYD',
  MAD = 'MAD',
  MDL = 'MDL',
  MUR = 'MUR',
  MXN = 'MXN',
  MYR = 'MYR',
  MVR = 'MVR',
  NIO = 'NIO',
  NOK = 'NOK',
  NPR = 'NPR',
  NZD = 'NZD',
  OMR = 'OMR',
  PAB = 'PAB',
  PEN = 'PEN',
  PHP = 'PHP',
  PKR = 'PKR',
  PLN = 'PLN',
  PYG = 'PYG',
  QAR = 'QAR',
  RON = 'RON',
  RUB = 'RUB',
  SAR = 'SAR',
  SCR = 'SCR',
  SEK = 'SEK',
  SGD = 'SGD',
  SVC = 'SVC',
  SYP = 'SYP',
  THB = 'THB',
  TJS = 'TJS',
  TMT = 'TMT',
  TRY = 'TRY',
  TWD = 'TWD',
  UAH = 'UAH',
  UGX = 'UGX',
  USD = 'USD',
  UYU = 'UYU',
  UZS = 'UZS',
  VEF = 'VEF',
  VND = 'VND',
  XAF = 'XAF',
  XOF = 'XOF',
  XPF = 'XPF',
  ZAR = 'ZAR'
}
/**
 * The state of the coffee information.
 */
export enum MetadataState {
  DRAFT = 'draft',
  PUBLISHED = 'published',
  ARCHIVED = 'archived'
}
/**
 * The coffee state from harvested cherries to green beans.
 */
export enum ProcessingState1 {
  RAW_CHERRIES = 'raw_cherries',
  DRIED_CHERRIES = 'dried_cherries',
  WET_PARCHMENT = 'wet_parchment',
  PARCHMENT = 'parchment',
  WET_GREEN = 'wet_green',
  RAW_GREEN = 'raw_green',
  GREEN = 'green'
}
