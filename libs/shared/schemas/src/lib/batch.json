{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "libs/shared/schemas/src/lib/batch.json",
  "title": "Batch",
  "description": "A batch is a collection of receptions that have been processed together.",
  "type": "object",
  "allOf": [
    {
      "$ref": "#/$defs/BatchPartial"
    },
    {
      "title": "BatchExtras",
      "type": "object",
      "properties": {
        "receptions": {
          "$comment": "reception shares the same processing sourceState.",
          "title": "Receptions",
          "type": "array",
          "description": "The reception items from which the batch originate.",
          "items": {
            "oneOf": [
              {
                "$ref": "#/$defs/ReceptionPartial"
              },
              {
                "title": "CID",
                "type": "string",
                "format": "cid"
              }
            ]
          },
          "uniqueItems": true,
          "minItems": 1,
          "maxItems": 1,
          "readOnly": true,
          "sameProcessingSourceState": true
        }
      },
      "additionalProperties": true,
      "required": ["receptions"]
    }
  ],
  "$defs": {
    "BatchPartial": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "title": "BatchPartial",
      "description": "A batch of coffee is a collection of coffee varieties that are processed together.",
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "id": {
          "type": "string",
          "description": "The batch ID.",
          "format": "uuid"
        },
        "name": {
          "type": "string",
          "description": "The batch name."
        },
        "facility": {
          "description": "organisation or person that is responsible for the processing of the batch",
          "$ref": "#/$defs/BatchPartial/$defs/Contact"
        },
        "processing": {
          "$ref": "#/$defs/BatchPartial/$defs/Processing"
        },
        "varieties": {
          "title": "Varieties",
          "type": "array",
          "items": {
            "$ref": "#/$defs/BatchPartial/$defs/Variety"
          },
          "uniqueItems": true,
          "minItems": 1
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": ["id", "facility", "processing", "varieties"],
      "$defs": {
        "Contact": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "title": "Contact",
          "type": "object",
          "additionalProperties": true,
          "properties": {
            "name": {
              "type": "string",
              "description": "The full name of the contact."
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "email": {
              "title": "Email",
              "type": "string",
              "description": "The email address of the contact.",
              "format": "email"
            },
            "website": {
              "title": "Website",
              "type": "string",
              "format": "uri"
            },
            "phone": {
              "title": "Phone",
              "type": "string",
              "description": "The phone number of the contact.",
              "pattern": "^\\+?[1-9]\\d{1,14}$"
            },
            "area": {
              "$ref": "#/$defs/BatchPartial/$defs/Contact/$defs/Area"
            },
            "location": {
              "$ref": "#/$defs/BatchPartial/$defs/Contact/$defs/Location"
            },
            "organizationName": {
              "title": "OrganizationName",
              "type": "string",
              "description": "The name of the company|association the contact works for."
            }
          },
          "required": ["name"],
          "dependentRequired": {
            "firstName": ["lastName"],
            "lastName": ["firstName"],
            "organizationName": ["email", "location"]
          },
          "$defs": {
            "MeasurementAmount": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "title": "MeasurementAmount",
              "type": "number",
              "description": "The amount of the measurement, 10 digits in total, maximum of 3 digits after decimal point",
              "multipleOf": 0.001,
              "maximum": 9999999999
            },
            "Area": {
              "title": "Area",
              "type": "object",
              "properties": {
                "amount": {
                  "$ref": "#/$defs/BatchPartial/$defs/Contact/$defs/MeasurementAmount"
                },
                "unit": {
                  "title": "AreaUnit",
                  "type": "string",
                  "const": "m2",
                  "default": "m2"
                }
              },
              "additionalProperties": false,
              "required": ["amount", "unit"]
            },
            "Location": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "title": "Location",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "country": {
                  "$ref": "#/$defs/BatchPartial/$defs/Contact/$defs/Location/$defs/Country"
                },
                "state": {
                  "type": "string"
                },
                "region": {
                  "type": "string",
                  "description": "The specific region within the country."
                },
                "subregion": {
                  "type": "string",
                  "description": "The specific subregion within the region."
                },
                "zip": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "street": {
                  "type": "string"
                },
                "altitude": {
                  "type": "number",
                  "description": "The altitude in meters."
                },
                "latitude": {
                  "type": "number",
                  "description": "The latitude coordinate."
                },
                "longitude": {
                  "type": "number",
                  "description": "The longitude coordinate."
                }
              },
              "additionalProperties": false,
              "required": ["country"],
              "dependentRequired": {
                "subregion": ["region"],
                "latitude": ["longitude"],
                "longitude": ["latitude"]
              },
              "$defs": {
                "Country": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "title": "Country",
                  "type": "string",
                  "description": "The country as ISO code where the coffee is produced.",
                  "enum": [
                    "AF",
                    "AX",
                    "AL",
                    "DZ",
                    "AS",
                    "AD",
                    "AO",
                    "AI",
                    "AQ",
                    "AG",
                    "AR",
                    "AM",
                    "AW",
                    "AU",
                    "AT",
                    "AZ",
                    "BS",
                    "BH",
                    "BD",
                    "BB",
                    "BY",
                    "BE",
                    "BZ",
                    "BJ",
                    "BM",
                    "BT",
                    "BO",
                    "BQ",
                    "BA",
                    "BW",
                    "BV",
                    "BR",
                    "IO",
                    "BN",
                    "BG",
                    "BF",
                    "BI",
                    "CV",
                    "KH",
                    "CM",
                    "CA",
                    "KY",
                    "CF",
                    "TD",
                    "CL",
                    "CN",
                    "CX",
                    "CC",
                    "CO",
                    "KM",
                    "CG",
                    "CD",
                    "CK",
                    "CR",
                    "CI",
                    "HR",
                    "CU",
                    "CW",
                    "CY",
                    "CZ",
                    "DK",
                    "DJ",
                    "DM",
                    "DO",
                    "EC",
                    "EG",
                    "SV",
                    "GQ",
                    "ER",
                    "EE",
                    "SZ",
                    "ET",
                    "FK",
                    "FO",
                    "FJ",
                    "FI",
                    "FR",
                    "GF",
                    "PF",
                    "TF",
                    "GA",
                    "GM",
                    "GE",
                    "DE",
                    "GH",
                    "GI",
                    "GR",
                    "GL",
                    "GD",
                    "GP",
                    "GU",
                    "GT",
                    "GG",
                    "GN",
                    "GW",
                    "GY",
                    "HT",
                    "HM",
                    "VA",
                    "HN",
                    "HK",
                    "HU",
                    "IS",
                    "IN",
                    "ID",
                    "IR",
                    "IQ",
                    "IE",
                    "IM",
                    "IL",
                    "IT",
                    "JM",
                    "JP",
                    "JE",
                    "JO",
                    "KZ",
                    "KE",
                    "KI",
                    "KP",
                    "KR",
                    "KW",
                    "KG",
                    "LA"
                  ]
                }
              },
              "examples": [
                {
                  "name": "Work",
                  "country": "US",
                  "state": "CA",
                  "region": "San Francisco",
                  "subregion": "Mission District",
                  "zip": "94110",
                  "city": "San Francisco",
                  "street": "123 Main St",
                  "altitude": 100,
                  "latitude": 37.7749,
                  "longitude": 122.4194
                },
                {
                  "name": "Home",
                  "country": "FR",
                  "zip": "17000",
                  "city": "La Rochelle",
                  "street": "Place de la Résistance"
                }
              ]
            }
          },
          "examples": [
            {
              "name": "John Doe",
              "email": "email@email.com",
              "phone": "+1234567890",
              "website": "https://example.com",
              "area": {
                "value": 100,
                "unit": "m2"
              },
              "location": {
                "name": "Home",
                "country": "FR",
                "zip": "17000",
                "city": "La Rochelle",
                "street": "Place de la Résistance"
              },
              "organizationName": "Example Inc.",
              "extraProperty": "additionalValue"
            }
          ]
        },
        "Processing": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "title": "Processing",
          "description": "The process of coffee beans transformation.",
          "$comment": "The International Coffee Organization (ICO) the following conversions, dry cherry => green brean : 0.5 ; parchment => green bean : 0.8 ; roasted bean => green bean : 1.19",
          "type": "object",
          "properties": {
            "name": {
              "description": "The name of the process.",
              "type": "string"
            },
            "sourceState": {
              "description": "The incoming state of the coffe.",
              "$ref": "#/$defs/BatchPartial/$defs/Processing/$defs/ProcessingState"
            },
            "sourceWeight": {
              "description": "The incoming weight of the coffe.",
              "$ref": "#/$defs/BatchPartial/$defs/Processing/$defs/Weight"
            },
            "targetState": {
              "description": "The outgoing state of the coffe.",
              "$ref": "#/$defs/BatchPartial/$defs/Processing/$defs/ProcessingState"
            },
            "targetWeight": {
              "description": "The outgoing weight of the coffe.",
              "$ref": "#/$defs/BatchPartial/$defs/Processing/$defs/Weight"
            },
            "start": {
              "description": "The start date of the process.",
              "type": "string",
              "format": "date-time"
            },
            "end": {
              "description": "The end date of the process.",
              "type": "string",
              "format": "date-time"
            },
            "method": {
              "description": "The processing method.",
              "$ref": "#/$defs/BatchPartial/$defs/Processing/$defs/ProcessingMethod"
            }
          },
          "additionalProperties": false,
          "required": [
            "sourceState",
            "sourceWeight",
            "targetState",
            "targetWeight",
            "start",
            "end",
            "method"
          ],
          "$defs": {
            "ProcessingMethod": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "title": "ProcessingMethod",
              "description": "The method used to process the coffee, e.g., washed, natural, or honey.",
              "type": "string",
              "enum": [
                "natural",
                "fully_washed",
                "semi_washed",
                "pulped_natural",
                "honey",
                "carbonic_maceration",
                "wet_hulled",
                "other"
              ]
            },
            "ProcessingState": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "title": "ProcessingState",
              "description": "The coffee state from harvested cherries to green beans.",
              "type": "string",
              "enum": [
                "raw_cherries",
                "dried_cherries",
                "wet_parchment",
                "parchment",
                "wet_green",
                "raw_green",
                "green"
              ]
            },
            "Weight": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "title": "Weight",
              "type": "object",
              "properties": {
                "amount": {
                  "$ref": "#/$defs/BatchPartial/$defs/Processing/$defs/Weight/$defs/MeasurementAmount"
                },
                "unit": {
                  "$ref": "#/$defs/BatchPartial/$defs/Processing/$defs/Weight/$defs/WeightUnit"
                }
              },
              "additionalProperties": false,
              "required": ["amount", "unit"],
              "$defs": {
                "MeasurementAmount": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "title": "MeasurementAmount",
                  "type": "number",
                  "description": "The amount of the measurement, 10 digits in total, maximum of 3 digits after decimal point",
                  "multipleOf": 0.001,
                  "maximum": 9999999999
                },
                "WeightUnit": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "title": "WeightUnit",
                  "type": "string",
                  "enum": ["g", "kg", "oz", "lb"]
                }
              }
            }
          },
          "examples": [
            {
              "name": "The wash",
              "sourceState": "dried_cherries",
              "sourceWeight": {
                "amount": 10,
                "unit": "kg"
              },
              "targetState": "wet_parchment",
              "targetWeight": {
                "amount": 9,
                "unit": "kg"
              },
              "start": "2021-01-01T00:00:00.000Z",
              "end": "2021-01-01T00:00:00.000Z",
              "method": "fully_washed"
            },
            {
              "name": "Super Roasting",
              "sourceState": "green",
              "sourceWeight": {
                "amount": 1000,
                "unit": "g"
              },
              "targetState": "roasted",
              "targetWeight": {
                "amount": 900,
                "unit": "g"
              },
              "start": "2021-01-01T00:00:00.000Z",
              "end": "2021-01-01T00:00:00.000Z",
              "method": "other"
            }
          ]
        },
        "Variety": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "description": "The coffee bean variety.",
          "title": "Variety",
          "anyOf": [
            {
              "title": "Variety",
              "type": "string",
              "enum": [
                "Agaro",
                "Arusha",
                "Ateng",
                "Batian",
                "Bergandal",
                "Blue Mountain",
                "Bourbon",
                "Castillo",
                "Catimor",
                "Catuai",
                "Caturra",
                "Cauvery",
                "Excelsa",
                "Geisha",
                "Icatu",
                "Jackson",
                "Kent",
                "K7",
                "Laurina",
                "Liberica",
                "Maragogype",
                "Mibrizi",
                "Moka",
                "Mundo Novo",
                "Mysore",
                "N5",
                "N39",
                "Onan Ganjang",
                "Pacamara",
                "Red Bourbon",
                "Ruiru 11",
                "S274",
                "S795",
                "Selection 5B",
                "Selection 6",
                "Selection 9",
                "Selection 10",
                "Sidikalang",
                "SL14",
                "SL28",
                "SL34",
                "SV-2006",
                "Sudan Rume",
                "TimTim",
                "Typica",
                "Typica/Nyara",
                "Yellow Bourbon"
              ]
            },
            {
              "type": "string"
            }
          ]
        }
      },
      "examples": [
        {
          "id": "b1b2b3b4-b5b6-b7b8-b9b0-b1b2b3b4b5b6",
          "name": "Coffee 1",
          "facility": {
            "name": "Washing station",
            "location": {
              "country": "ET"
            }
          },
          "processing": {
            "name": "The wash",
            "sourceState": "dried_cherries",
            "sourceWeight": {
              "amount": 10,
              "unit": "kg"
            },
            "targetState": "wet_parchment",
            "targetWeight": {
              "amount": 9,
              "unit": "kg"
            },
            "start": "2021-01-01T00:00:00.000Z",
            "end": "2021-01-01T00:00:00.000Z",
            "method": "fully_washed"
          },
          "varieties": ["Heirloom"],
          "createdAt": "2021-01-01T00:00:00Z",
          "updatedAt": "2021-01-01T00:00:00Z"
        }
      ]
    },
    "ReceptionPartial": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "title": "ReceptionPartial",
      "description": "A reception is the step before processing. It describes when and where the coffee is received. The weights and prices of the reception items are aggregated at the reception. The aggregate weight of a reception is divided among one or more batches. Each batch must be linked to the original source of the coffee in order to preserve traceability throughout the supply chain.",
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "id": {
          "type": "string",
          "description": "The batch ID.",
          "format": "uuid"
        },
        "facility": {
          "description": "organisation or person that is responsible for the processing of the batch",
          "$ref": "#/$defs/BatchPartial/$defs/Contact"
        },
        "items": {
          "type": "array",
          "title": "ReceptionItems",
          "description": "The items that were received.",
          "items": {
            "$ref": "#/$defs/ReceptionPartial/$defs/ReceptionItem"
          },
          "minItems": 1
        },
        "metadata": {
          "$ref": "#/$defs/ReceptionPartial/$defs/Metadata"
        },
        "receptionDate": {
          "type": "string",
          "description": "The date the coffee was received.",
          "format": "date-time"
        },
        "state": {
          "description": "The state of the coffe at reception.",
          "$ref": "#/$defs/ReceptionPartial/$defs/ProcessingState"
        }
      },
      "required": ["id", "receptionDate", "items", "state"],
      "if": {
        "properties": {
          "state": {
            "const": "raw_cherries"
          }
        }
      },
      "then": {
        "properties": {
          "items": {
            "title": "ReceptionItems",
            "type": "array",
            "items": {
              "type": "object",
              "title": "ReceptionItem",
              "properties": {
                "growingConditions": {
                  "$ref": "#/$defs/ReceptionPartial/$defs/ReceptionItem/$defs/GrowingConditions"
                },
                "harvesting": {
                  "$comment": "TODO: if origin.role is 'farm' or 'field', .state is 'raw_cherries' then this is required or ",
                  "$ref": "#/$defs/ReceptionPartial/$defs/ReceptionItem/$defs/Harvesting"
                }
              },
              "required": ["growingConditions", "harvesting"]
            }
          }
        },
        "required": ["items"],
        "additionalProperties": true
      },
      "$defs": {
        "ReceptionItem": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "title": "ReceptionItem",
          "type": "object",
          "additionalProperties": true,
          "properties": {
            "grossWeight": {
              "$ref": "#/$defs/BatchPartial/$defs/Processing/$defs/Weight"
            },
            "growingConditions": {
              "$ref": "#/$defs/ReceptionPartial/$defs/ReceptionItem/$defs/GrowingConditions"
            },
            "harvesting": {
              "$comment": "TODO: if origin.role is 'farm' or 'field', .state is 'raw_cherries' then this is required or ",
              "$ref": "#/$defs/ReceptionPartial/$defs/ReceptionItem/$defs/Harvesting"
            },
            "origin": {
              "description": "The source from which the coffee was previously processed ( e.g. the farm where the coffee was produced, the mill where the coffee was processed, etc. )",
              "$ref": "#/$defs/ReceptionPartial/$defs/ReceptionItem/$defs/Origin"
            },
            "part": {
              "$ref": "#/$defs/ReceptionPartial/$defs/ReceptionItem/$defs/BatchPart"
            },
            "price": {
              "$ref": "#/$defs/ReceptionPartial/$defs/ReceptionItem/$defs/RelativePrice"
            },
            "weight": {
              "$ref": "#/$defs/BatchPartial/$defs/Processing/$defs/Weight"
            }
          },
          "required": ["origin", "weight"],
          "$defs": {
            "BatchPart": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "title": "BatchPart",
              "type": "string",
              "enum": [
                "ripe",
                "over ripe",
                "unripe",
                "dry pod",
                "export",
                "local",
                "primary",
                "secondary",
                "tertiary",
                "floater",
                "inferior",
                "superior",
                "discard",
                "cascara",
                "other",
                "a",
                "b",
                "one",
                "two",
                "three",
                "four",
                "five",
                "six",
                "seven",
                "eight",
                "nine"
              ]
            },
            "GrowingConditions": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "title": "GrowingConditions",
              "type": "object",
              "description": "Information about the coffee growing conditions.",
              "properties": {
                "climate": {
                  "$ref": "#/$defs/ReceptionPartial/$defs/ReceptionItem/$defs/GrowingConditions/$defs/Climate"
                },
                "soilType": {
                  "title": "SoilType",
                  "type": "string",
                  "description": "The type of soil in the coffee-growing area, which can influence the flavor profile of the coffee."
                },
                "elevation": {
                  "$ref": "#/$defs/ReceptionPartial/$defs/ReceptionItem/$defs/GrowingConditions/$defs/Elevation"
                }
              },
              "additionalProperties": false,
              "required": [],
              "$defs": {
                "MeasurementAmount": {
                  "$ref": "#/$defs/BatchPartial/$defs/Processing/$defs/Weight/$defs/MeasurementAmount"
                },
                "MeasurementRange": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "title": "MeasurementRange",
                  "$comment": "Being able to use unit as a generic would be really nice... https://json-schema.org/blog/posts/dynamicref-and-generics",
                  "type": "object",
                  "properties": {
                    "min": {
                      "$ref": "#/$defs/ReceptionPartial/$defs/ReceptionItem/$defs/Origin/$defs/Contact/$defs/MeasurementAmount"
                    },
                    "max": {
                      "$ref": "#/$defs/ReceptionPartial/$defs/ReceptionItem/$defs/Origin/$defs/Contact/$defs/MeasurementAmount"
                    }
                  },
                  "additionalProperties": true,
                  "required": ["min", "max"],
                  "$defs": {
                    "Amount": {
                      "$ref": "#/$defs/ReceptionPartial/$defs/ReceptionItem/$defs/Origin/$defs/Contact/$defs/MeasurementAmount"
                    }
                  },
                  "examples": [
                    {
                      "min": 50,
                      "max": 100
                    },
                    {
                      "min": -10,
                      "max": 20
                    }
                  ]
                },
                "Elevation": {
                  "title": "Elevation",
                  "type": "object",
                  "description": "The elevation (in meters) at which the coffee is grown.",
                  "properties": {
                    "amount": {
                      "$ref": "#/$defs/BatchPartial/$defs/Processing/$defs/Weight/$defs/MeasurementAmount"
                    },
                    "unit": {
                      "type": "string",
                      "const": "m",
                      "default": "m"
                    }
                  },
                  "additionalProperties": false,
                  "required": ["amount", "unit"]
                },
                "Climate": {
                  "type": "object",
                  "title": "Climate",
                  "description": "A description of the climate of the coffee-growing area, such as temperature range, rainfall patterns, and humidity.",
                  "properties": {
                    "temperature": {
                      "title": "Temperature",
                      "description": "The range of temperatures in the coffee-growing area, e.g., '15-25 °C' or '20-30 °C'.",
                      "allOf": [
                        {
                          "$ref": "#/$defs/ReceptionPartial/$defs/ReceptionItem/$defs/GrowingConditions/$defs/MeasurementRange"
                        },
                        {
                          "type": "object",
                          "title": "TemperatureUnit",
                          "properties": {
                            "unit": {
                              "type": "string",
                              "const": "°C",
                              "default": "°C"
                            }
                          },
                          "unevaluatedProperties": true,
                          "additionalProperties": true,
                          "required": ["unit"]
                        }
                      ]
                    },
                    "rainfall": {
                      "title": "Rainfall",
                      "description": "The average rainfall in the coffee-growing area, e.g., '1000-1500 mm' or '1500-2000 mm'.",
                      "allOf": [
                        {
                          "$ref": "#/$defs/ReceptionPartial/$defs/ReceptionItem/$defs/GrowingConditions/$defs/MeasurementRange"
                        },
                        {
                          "type": "object",
                          "title": "RainfallUnit",
                          "properties": {
                            "unit": {
                              "type": "string",
                              "const": "mm",
                              "default": "mm"
                            }
                          },
                          "unevaluatedProperties": true,
                          "additionalProperties": true,
                          "required": ["unit"]
                        }
                      ]
                    },
                    "humidity": {
                      "title": "Humidity",
                      "type": "object",
                      "description": "The average humidity in the coffee-growing area, e.g., '70-80%' or '80-90%'.",
                      "properties": {
                        "min": {
                          "type": "number",
                          "multipleOf": 0.1,
                          "minimum": 0,
                          "maximum": 100
                        },
                        "max": {
                          "type": "number",
                          "multipleOf": 0.1,
                          "minimum": 0,
                          "maximum": 100
                        },
                        "unit": {
                          "type": "string",
                          "const": "%",
                          "default": "%"
                        },
                        "additionalProperties": false
                      },
                      "required": ["min", "max", "unit"]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "examples": [
                {
                  "climate": {
                    "temperature": {
                      "min": 15,
                      "max": 25,
                      "unit": "°C"
                    },
                    "rainfall": {
                      "min": 1000,
                      "max": 1500,
                      "unit": "mm"
                    },
                    "humidity": {
                      "min": 70,
                      "max": 80,
                      "unit": "%"
                    }
                  },
                  "soilType": "Volcanic",
                  "elevation": {
                    "amount": 1500,
                    "unit": "m"
                  }
                }
              ]
            },
            "Harvesting": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "title": "Harvesting",
              "type": "object",
              "description": "Information about the coffee harvesting process.",
              "properties": {
                "time": {
                  "type": "object",
                  "title": "HarvestingTime",
                  "description": "The time of year when the coffee was harvested, e.g., 'March-April' or 'October-November'.",
                  "properties": {
                    "start": {
                      "$ref": "#/$defs/ReceptionPartial/$defs/ReceptionItem/$defs/Harvesting/$defs/Month"
                    },
                    "end": {
                      "$ref": "#/$defs/ReceptionPartial/$defs/ReceptionItem/$defs/Harvesting/$defs/Month"
                    }
                  }
                },
                "method": {
                  "$ref": "#/$defs/ReceptionPartial/$defs/ReceptionItem/$defs/Harvesting/$defs/HarvestingMethod"
                },
                "labor": {
                  "type": "string",
                  "description": "A description of the labor practices used in the harvest, such as the use of local workers or migrant labor, if some or all of the labor is mechanized, and if the labor is paid or unpaid or if team are incentivized for uniform ripeness."
                }
              },
              "required": ["time", "method"],
              "additionalProperties": false,
              "$defs": {
                "HarvestingMethod": {
                  "type": "string",
                  "description": "The method used for harvesting the coffee cherries, e.g., 'hand-picking' or 'mechanical'.",
                  "title": "HarvestingMethod",
                  "enum": [
                    "hand-picking",
                    "mechanical",
                    "strip-picking",
                    "other"
                  ]
                },
                "Month": {
                  "type": "string",
                  "title": "Month",
                  "description": "A month of the year, e.g., 'January' or 'February'.",
                  "enum": [
                    "January",
                    "February",
                    "March",
                    "April",
                    "May",
                    "June",
                    "July",
                    "August",
                    "September",
                    "October",
                    "November",
                    "December"
                  ]
                }
              },
              "examples": [
                {
                  "time": {
                    "start": "March",
                    "end": "April"
                  },
                  "method": "hand-picking",
                  "labor": "Local workers are paid for their labor."
                }
              ]
            },
            "Origin": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "title": "Origin",
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/$defs/ReceptionPartial/$defs/ReceptionItem/$defs/Origin/$defs/Contact"
                },
                {
                  "type": "object",
                  "title": "OriginDetails",
                  "properties": {
                    "role": {
                      "$ref": "#/$defs/ReceptionPartial/$defs/ReceptionItem/$defs/Origin/$defs/OriginRole"
                    }
                  },
                  "unevaluatedProperties": true,
                  "additionalProperties": true,
                  "required": ["role"]
                }
              ],
              "$defs": {
                "Contact": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "title": "Contact",
                  "type": "object",
                  "additionalProperties": true,
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The full name of the contact."
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "email": {
                      "title": "Email",
                      "type": "string",
                      "description": "The email address of the contact.",
                      "format": "email"
                    },
                    "website": {
                      "title": "Website",
                      "type": "string",
                      "format": "uri"
                    },
                    "phone": {
                      "title": "Phone",
                      "type": "string",
                      "description": "The phone number of the contact.",
                      "pattern": "^\\+?[1-9]\\d{1,14}$"
                    },
                    "area": {
                      "$ref": "#/$defs/ReceptionPartial/$defs/ReceptionItem/$defs/Origin/$defs/Contact/$defs/Area"
                    },
                    "location": {
                      "$ref": "#/$defs/ReceptionPartial/$defs/ReceptionItem/$defs/Origin/$defs/Contact/$defs/Location"
                    },
                    "organizationName": {
                      "title": "OrganizationName",
                      "type": "string",
                      "description": "The name of the company|association the contact works for."
                    }
                  },
                  "required": ["name"],
                  "dependentRequired": {
                    "firstName": ["lastName"],
                    "lastName": ["firstName"],
                    "organizationName": ["email", "location"]
                  },
                  "$defs": {
                    "MeasurementAmount": {
                      "$schema": "https://json-schema.org/draft/2020-12/schema",
                      "title": "MeasurementAmount",
                      "type": "number",
                      "description": "The amount of the measurement, 10 digits in total, maximum of 3 digits after decimal point",
                      "multipleOf": 0.001,
                      "maximum": 9999999999
                    },
                    "Area": {
                      "title": "Area",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "$ref": "#/$defs/ReceptionPartial/$defs/ReceptionItem/$defs/Origin/$defs/Contact/$defs/MeasurementAmount"
                        },
                        "unit": {
                          "title": "AreaUnit",
                          "type": "string",
                          "const": "m2",
                          "default": "m2"
                        }
                      },
                      "additionalProperties": false,
                      "required": ["amount", "unit"]
                    },
                    "Location": {
                      "$schema": "https://json-schema.org/draft/2020-12/schema",
                      "title": "Location",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "country": {
                          "$ref": "#/$defs/ReceptionPartial/$defs/ReceptionItem/$defs/Origin/$defs/Contact/$defs/Location/$defs/Country"
                        },
                        "state": {
                          "type": "string"
                        },
                        "region": {
                          "type": "string",
                          "description": "The specific region within the country."
                        },
                        "subregion": {
                          "type": "string",
                          "description": "The specific subregion within the region."
                        },
                        "zip": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "street": {
                          "type": "string"
                        },
                        "altitude": {
                          "type": "number",
                          "description": "The altitude in meters."
                        },
                        "latitude": {
                          "type": "number",
                          "description": "The latitude coordinate."
                        },
                        "longitude": {
                          "type": "number",
                          "description": "The longitude coordinate."
                        }
                      },
                      "additionalProperties": false,
                      "required": ["country"],
                      "dependentRequired": {
                        "subregion": ["region"],
                        "latitude": ["longitude"],
                        "longitude": ["latitude"]
                      },
                      "$defs": {
                        "Country": {
                          "$schema": "https://json-schema.org/draft/2020-12/schema",
                          "title": "Country",
                          "type": "string",
                          "description": "The country as ISO code where the coffee is produced.",
                          "enum": [
                            "AF",
                            "AX",
                            "AL",
                            "DZ",
                            "AS",
                            "AD",
                            "AO",
                            "AI",
                            "AQ",
                            "AG",
                            "AR",
                            "AM",
                            "AW",
                            "AU",
                            "AT",
                            "AZ",
                            "BS",
                            "BH",
                            "BD",
                            "BB",
                            "BY",
                            "BE",
                            "BZ",
                            "BJ",
                            "BM",
                            "BT",
                            "BO",
                            "BQ",
                            "BA",
                            "BW",
                            "BV",
                            "BR",
                            "IO",
                            "BN",
                            "BG",
                            "BF",
                            "BI",
                            "CV",
                            "KH",
                            "CM",
                            "CA",
                            "KY",
                            "CF",
                            "TD",
                            "CL",
                            "CN",
                            "CX",
                            "CC",
                            "CO",
                            "KM",
                            "CG",
                            "CD",
                            "CK",
                            "CR",
                            "CI",
                            "HR",
                            "CU",
                            "CW",
                            "CY",
                            "CZ",
                            "DK",
                            "DJ",
                            "DM",
                            "DO",
                            "EC",
                            "EG",
                            "SV",
                            "GQ",
                            "ER",
                            "EE",
                            "SZ",
                            "ET",
                            "FK",
                            "FO",
                            "FJ",
                            "FI",
                            "FR",
                            "GF",
                            "PF",
                            "TF",
                            "GA",
                            "GM",
                            "GE",
                            "DE",
                            "GH",
                            "GI",
                            "GR",
                            "GL",
                            "GD",
                            "GP",
                            "GU",
                            "GT",
                            "GG",
                            "GN",
                            "GW",
                            "GY",
                            "HT",
                            "HM",
                            "VA",
                            "HN",
                            "HK",
                            "HU",
                            "IS",
                            "IN",
                            "ID",
                            "IR",
                            "IQ",
                            "IE",
                            "IM",
                            "IL",
                            "IT",
                            "JM",
                            "JP",
                            "JE",
                            "JO",
                            "KZ",
                            "KE",
                            "KI",
                            "KP",
                            "KR",
                            "KW",
                            "KG",
                            "LA"
                          ]
                        }
                      },
                      "examples": [
                        {
                          "name": "Work",
                          "country": "US",
                          "state": "CA",
                          "region": "San Francisco",
                          "subregion": "Mission District",
                          "zip": "94110",
                          "city": "San Francisco",
                          "street": "123 Main St",
                          "altitude": 100,
                          "latitude": 37.7749,
                          "longitude": 122.4194
                        },
                        {
                          "name": "Home",
                          "country": "FR",
                          "zip": "17000",
                          "city": "La Rochelle",
                          "street": "Place de la Résistance"
                        }
                      ]
                    }
                  },
                  "examples": [
                    {
                      "name": "John Doe",
                      "email": "email@email.com",
                      "phone": "+1234567890",
                      "website": "https://example.com",
                      "area": {
                        "value": 100,
                        "unit": "m2"
                      },
                      "location": {
                        "name": "Home",
                        "country": "FR",
                        "zip": "17000",
                        "city": "La Rochelle",
                        "street": "Place de la Résistance"
                      },
                      "organizationName": "Example Inc.",
                      "extraProperty": "additionalValue"
                    }
                  ]
                },
                "OriginRole": {
                  "title": "OriginRole",
                  "type": "string",
                  "enum": [
                    "farm",
                    "field",
                    "community",
                    "cooperative",
                    "picker",
                    "other"
                  ]
                }
              }
            },
            "RelativePrice": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "title": "RelativePrice",
              "type": "object",
              "additionalProperties": false,
              "description": "A price relative to a base unit.",
              "allOf": [
                {
                  "$ref": "#/$defs/ReceptionPartial/$defs/ReceptionItem/$defs/RelativePrice/$defs/Price"
                },
                {
                  "properties": {
                    "unit": {
                      "$ref": "#/$defs/BatchPartial/$defs/Processing/$defs/Weight/$defs/WeightUnit"
                    }
                  },
                  "required": ["unit"]
                }
              ],
              "$defs": {
                "Price": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "title": "Price",
                  "type": "object",
                  "additionalProperties": true,
                  "properties": {
                    "amount": {
                      "$ref": "#/$defs/ReceptionPartial/$defs/ReceptionItem/$defs/RelativePrice/$defs/Price/$defs/PriceAmount"
                    },
                    "currency": {
                      "$ref": "#/$defs/ReceptionPartial/$defs/ReceptionItem/$defs/RelativePrice/$defs/Price/$defs/Currency"
                    }
                  },
                  "required": ["amount", "currency"],
                  "$defs": {
                    "PriceAmount": {
                      "type": "number",
                      "description": "The price amount",
                      "multipleOf": 0.001
                    },
                    "Currency": {
                      "title": "Currency",
                      "type": "string",
                      "description": "The price unit",
                      "enum": [
                        "AED",
                        "AMD",
                        "ARS",
                        "AUD",
                        "AZN",
                        "BAM",
                        "BDT",
                        "BGN",
                        "BOB",
                        "BRL",
                        "BWP",
                        "BYN",
                        "CAD",
                        "CHF",
                        "CLP",
                        "CNY",
                        "COP",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CZK",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EGP",
                        "EUR",
                        "GBP",
                        "GEL",
                        "GTQ",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HUF",
                        "IDR",
                        "ILS",
                        "INR",
                        "ISK",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KRW",
                        "KWD",
                        "KZT",
                        "LBP",
                        "LKR",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MUR",
                        "MXN",
                        "MYR",
                        "MVR",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RON",
                        "RUB",
                        "SAR",
                        "SCR",
                        "SEK",
                        "SGD",
                        "SVC",
                        "SYP",
                        "THB",
                        "TJS",
                        "TMT",
                        "TRY",
                        "TWD",
                        "UAH",
                        "UGX",
                        "USD",
                        "UYU",
                        "UZS",
                        "VEF",
                        "VND",
                        "XAF",
                        "XOF",
                        "XPF",
                        "ZAR"
                      ]
                    }
                  }
                },
                "WeightUnit": {
                  "$ref": "#/$defs/BatchPartial/$defs/Processing/$defs/Weight/$defs/WeightUnit"
                }
              },
              "examples": [
                {
                  "amount": 1.5,
                  "currency": "EUR",
                  "unit": "kg"
                }
              ]
            },
            "Weight": {
              "$ref": "#/$defs/BatchPartial/$defs/Processing/$defs/Weight"
            }
          }
        },
        "Contact": {
          "$ref": "#/$defs/BatchPartial/$defs/Contact"
        },
        "Metadata": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "title": "Metadata",
          "description": "A schema storing schema metadata",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "created": {
              "type": "string",
              "format": "date-time",
              "description": "The date and time when the coffee information was first created."
            },
            "lastUpdated": {
              "type": "string",
              "format": "date-time",
              "description": "The date and time when the coffee information was last updated."
            },
            "license": {
              "type": "string",
              "description": "The type of license under which the coffee information is published.",
              "const": "Creative Commons Attribution 4.0 International (CC BY 4.0)"
            },
            "resourcePattern": {
              "type": "string",
              "description": "The naming convention pattern for related resources. It can be used to map resources on a static server.",
              "examples": [
                "{resourceType}/{version}/{resourceName}.{extension}"
              ]
            },
            "source": {
              "type": "string",
              "description": "A reference to the primary source of the coffee information, such as a URL or a citation."
            },
            "state": {
              "$ref": "#/$defs/ReceptionPartial/$defs/Metadata/$defs/MetadataState"
            },
            "version": {
              "$ref": "#/$defs/ReceptionPartial/$defs/Metadata/$defs/Version"
            }
          },
          "required": ["version"],
          "dependentRequired": {
            "state": ["created", "lastUpdated"],
            "created": ["state", "lastUpdated"],
            "lastUpdated": ["state", "created"],
            "license": ["author"]
          },
          "$defs": {
            "MetadataState": {
              "title": "MetadataState",
              "type": "string",
              "description": "The state of the coffee information.",
              "enum": ["draft", "published", "archived"]
            },
            "Version": {
              "title": "Version",
              "type": "string",
              "description": "The version of the schema.",
              "pattern": "^\\d+\\.\\d+\\.\\d+$"
            }
          }
        },
        "ProcessingState": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "title": "ProcessingState",
          "description": "The coffee state from harvested cherries to green beans.",
          "type": "string",
          "enum": [
            "raw_cherries",
            "dried_cherries",
            "wet_parchment",
            "parchment",
            "wet_green",
            "raw_green",
            "green"
          ]
        }
      }
    }
  },
  "examples": [
    {
      "id": "b1b2b3b4-b5b6-b7b8-b9b0-b1b2b3b4b5b6",
      "name": "Coffee 1",
      "facility": {
        "name": "Washing station",
        "location": {
          "country": "ET"
        }
      },
      "processing": {
        "name": "The wash",
        "sourceState": "dried_cherries",
        "sourceWeight": {
          "amount": 10,
          "unit": "kg"
        },
        "targetState": "wet_parchment",
        "targetWeight": {
          "amount": 9,
          "unit": "kg"
        },
        "start": "2021-01-01T00:00:00.000Z",
        "end": "2021-01-01T00:00:00.000Z",
        "method": "fully_washed"
      },
      "varieties": ["Heirloom"],
      "createdAt": "2021-01-01T00:00:00Z",
      "updatedAt": "2021-01-01T00:00:00Z"
    }
  ]
}
